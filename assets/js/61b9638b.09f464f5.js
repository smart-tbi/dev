"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7],{3905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return m}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(o),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return o?n.createElement(f,s(s({ref:t},u),{},{components:o})):n.createElement(f,s({ref:t},u))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,s=new Array(i);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var l=2;l<i;l++)s[l]=o[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},5584:function(e,t,o){o.r(t),o.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p}});var n=o(7462),r=o(3366),i=(o(7294),o(3905)),s=["components"],a={sidebar_position:1},c="Overview",l={unversionedId:"focusmode/overview",id:"focusmode/overview",title:"Overview",description:"Demo of Focus Mode Extension",source:"@site/docs/focusmode/overview.md",sourceDirName:"focusmode",slug:"/focusmode/overview",permalink:"/dev/docs/focusmode/overview",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/focusmode/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Focus Mode",permalink:"/dev/docs/category/focus-mode"},next:{title:"Parsing Posts from the Feed",permalink:"/dev/docs/focusmode/parsing-posts-from-the-feed"}},u={},p=[{value:"Directory Structure",id:"directory-structure",level:2},{value:"Try in action",id:"try-in-action",level:2}],d={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Demo of Focus Mode Extension",src:o(8756).Z,width:"1723",height:"857"})),(0,i.kt)("p",null,"The Focus Mode extension parses posts in a user's Facebook feed, stores them in a list, then displays each post in a dialog box (as seen above) so that they can focus on one post at a time. The extension popup contains a toggle switch that enables or disables the focus mode."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hajingit/tbi-focusmode"},"GitHub Repo")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://smart-tbi.github.io/studio/available-tools/focus-mode.html"},"Webpage for the public"))),(0,i.kt)("h2",{id:"directory-structure"},"Directory Structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"src\n|  background         // Contains a logging logic triggered when user closes the Facebook tab.\n|  content_scripts    // UI, parser, and main logging logic\n\u2502   \u2502   index.js\n\u2502   \u2502\n\u2502   \u2514\u2500\u2500\u2500components\n\u2502       \u2502   ExtensionContainer.js    // Top-most container that initializes the extension UI and logging\n\u2502       \u2514\u2500\u2500\u2500PostsBox                 // UIs for the focus mode\n\u2502           \u2502   Post.js              // A component that renders a post\n\u2502           \u2502   Post.css\n\u2502           \u2502   PostsBox.js          // The dialog that displays the Post component\n\u2502           \u2502   PostsBox.css\n\u2502   \u2514\u2500\u2500\u2500utils\n\u2502       \u2502   LogDispatcher.js         // A library that provides logging functions\n\u2502       \u2502   PostParser.js            // A library that parses a DOM object of a Facebook post\n\u2502     \n|  popup              // Extension popup where user can enable/disable the focus mode.\n|  fonts\n|  img\n")),(0,i.kt)("h2",{id:"try-in-action"},"Try in action"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Image guide on how to turn on the focus mode",src:o(249).Z,width:"812",height:"853"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Turn on the toggle switch in the extension popup."),(0,i.kt)("li",{parentName:"ol"},"As an overlay over the Facebook feed, the focus mode dialog will be displayed."),(0,i.kt)("li",{parentName:"ol"},"There are five possible actions when the user is in focus mode:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Previous Post")," (Left arrow button): Shows the previous post (if any)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Next Post")," (Right arrow button): Shows the next post. A ",(0,i.kt)("inlineCode",{parentName:"li"},"scroll")," event will be triggered at the bottom of the page to load more posts."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Like Post"),": Likes the post."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Go to Post"),": Immediately closes the overlay dialog and scrolls to the post in the feed the user was viewing."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Close Dialog")," (X button on the top right): Equivalent to disabling the focus mode.")))))}m.isMDXComponent=!0},8756:function(e,t,o){t.Z=o.p+"assets/images/focusmode_demo-fefe832d2aec5849d59778bbecea10be.png"},249:function(e,t,o){t.Z=o.p+"assets/images/focusmode_sequence-32fe087a26fcb2ec285c4d94b2856585.png"}}]);